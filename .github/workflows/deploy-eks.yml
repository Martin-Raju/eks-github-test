name: Deploy EKS Cluster with Terraform

on:
  push:
    branches:
      - develop
  workflow_dispatch:

jobs:
  terraform:
    name: 'Terraform Deploy'
    runs-on: ubuntu-latest

    env:
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_REGION: ${{ secrets.AWS_REGION }}

    defaults:
      run:
        working-directory: Terraform/environment/dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.6.6

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform destroy -auto-approve

  install-argocd:
    name: 'Install Argo CD on EKS'
    runs-on: ubuntu-latest
    needs: terraform

    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}
      EKS_CLUSTER_NAME: ${{ secrets.EKS_CLUSTER_NAME }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Update kubeconfig to access EKS
        run: |
          aws eks update-kubeconfig --region $AWS_REGION --name $EKS_CLUSTER_NAME

      - name: Install kubectl
        uses: azure/setup-kubectl@v3
        with:
          version: 'latest'

      - name: Install Helm
        uses: azure/setup-helm@v3
        with:
          version: 'latest'

      - name: Add Helm repos
        run: |
          helm repo add argo https://argoproj.github.io/argo-helm
          helm repo add eks https://aws.github.io/eks-charts
          helm repo update

      - name: Install AWS Load Balancer Controller
        run: |
          VPC_ID=$(aws eks describe-cluster --name $EKS_CLUSTER_NAME --region $AWS_REGION \
                    --query "cluster.resourcesVpcConfig.vpcId" --output text)
          
          helm upgrade --install aws-load-balancer-controller eks/aws-load-balancer-controller \
            -n kube-system \
            --set clusterName=$EKS_CLUSTER_NAME \
            --set serviceAccount.create=false \
            --set serviceAccount.name=aws-load-balancer-controller \
            --set region=$AWS_REGION \
            --set vpcId=$VPC_ID

      - name: Create Argo CD namespace
        run: |
          kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -

      - name: Install Argo CD (public LoadBalancer)
        run: |
          helm upgrade --install argocd argo/argo-cd \
            --namespace argocd --create-namespace \
            --set server.service.type=LoadBalancer

      - name: Wait for Argo CD ELB DNS
        run: |
          echo "Waiting for Argo CD LoadBalancer hostname..."
          for i in {1..20}; do
            HOSTNAME=$(kubectl get svc argocd-server -n argocd -o jsonpath='{.status.loadBalancer.ingress[0].hostname}')
            if [[ -n "$HOSTNAME" ]]; then
              echo "✅ Argo CD URL: http://$HOSTNAME"
              exit 0
            fi
            echo "Still waiting... ($i)"
            sleep 15
          done
          echo "❌ LoadBalancer hostname not assigned in time." >&2
          exit 1
